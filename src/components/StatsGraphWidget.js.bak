// COULDNT figure out a simple way to visualize this data
// in a graph with the available react-native graph libs

// import React, { Component } from 'react';
// import { connect } from 'react-redux';
// import { Radar } from 'react-native-pathjs-charts';
// import { computeGoalAveragesFromEntries } from '../helpers';
// import Card from './common/Card';
// import _ from 'lodash';
//
// class StatsGraphWidget extends Component {
//   renderGraph() {
//     // const entriesPerDay = {};
//     // _.each(entries, (entry) => {
//     //   const day = new Date(entry.createdAt || undefined).toDateString();
//     //   entriesPerDay[day] = entriesPerDay[day] || {};
//     //   _.each(entry.results, (score, goalId) => {
//     //     entriesPerDay[day][goalId] = entriesPerDay[day][goalId] || {};
//     //     if (score !== 0) {
//     //       entriesPerDay[day][goalId].count = (entriesPerDay[day][goalId].count || 0) + 1;
//     //       entriesPerDay[day][goalId].totalScore = (entriesPerDay[day][goalId].totalScore || 0) + score;
//     //     }
//     //   });
//     // });
//     //
//     // _.times(this.state.days, (num) => {
//     //   const dateObj = new Date();
//     //   dateObj.setDate(dateObj.getDate() - num)
//     //   dateObj.setHours(0, 0, 0, 0);
//     //   const dayString = dateObj.toDateString();
//     //
//     //   data.push([]);
//     // });
//
//     const goalAvgs = computeGoalAveragesFromEntries(this.props.entries);
//     const goalAvgWithDesc = _.reduce(goalAvgs, (agg, score, goalId) => {
//       const goal = _.find(this.props.goals, (g) => { return g.id === goalId; });
//       agg[goal.text] = score;
//       return agg;
//     }, {});
//
//     const data = [goalAvgWithDesc];
//     // const options = { color: '#e452ac' };
//
//   //   let data = [{
//   //    "speed": 74,
//   //    "balance": 29,
//   //    "explosives": 40,
//   //    "energy": 40,
//   //    "flexibility": 30,
//   //    "agility": 25,
//   //    "endurance": 44
//   //  }]
//
//    let options = {
//      width: 290,
//      height: 290,
//      margin: {
//        top: 20,
//        left: 20,
//        right: 30,
//        bottom: 20
//      },
//      r: 150,
//      max: 100,
//      fill: "#2980B9",
//      stroke: "#2980B9",
//      animate: {
//        type: 'oneByOne',
//        duration: 200
//      },
//      label: {
//        fontFamily: 'Arial',
//        fontSize: 14,
//        fontWeight: true,
//        fill: '#34495E'
//      }
//    }
//
//     return <Radar data={data} options={options} />;
//   }
//   render() {
//     return (
//       <Card headerText="Average score per day">
//         {this.renderGraph()}
//       </Card>
//     );
//   }
// }
//
// const mapStateToProps = (state) => {
//   return {
//     goals: state.goals,
//   };
// };
//
// export default connect(mapStateToProps)(StatsGraphWidget);
